name: Build and Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        check-latest: true

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    needs: build
    if: contains(github.event.head_commit.message, 'new release')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        check-latest: true

    - name: Get version from commit message
      id: get_version
      run: |
        VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oP 'new release v\K[0-9]+\.[0-9]+\.[0-9]+' || echo "0.1.0")
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: Release v${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
        body: |
          Release v${{ steps.get_version.outputs.version }}
          
          Changes in this release:
          ${{ github.event.head_commit.message }}